@page "/"

@inject BisleriumCafe.Data.Services.CofeeTypesService CoffeeService
@inject BisleriumCafe.Data.Services.AddInsService AddInsService
@inject BisleriumCafe.Data.Services.CartService CartService
@inject Microsoft.JSInterop.IJSRuntime JSRuntime
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager


<head>
    @* Bootstrap Links *@
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>

    <style>
        .card {
            border-radius:20px;
            border: 0px solid;
            display: inline-block;
            margin: 10px;                       
            padding: 25px;
            text-align: center;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Box shadow */
            transition: box-shadow 0.3s ease; /* Smooth transition on hover */
        }

            .card:hover {
                box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2); /* Darker box shadow on hover */
            }
            .card img {
                border-radius: 20%;
                width: 80px;
                /* Adjust as needed */
                height: 80px;
                /* Adjust as needed */
                object-fit: cover;
            }

        .name {
            margin-top: 5px;
            font-weight: bold;
            color: grey;
            font-size: x-small;
        }

        .price {
            margin-top: 5px;
            color: green;
            color: grey;
            font-size: xx-small;
            /* Adjust as needed */
        }

        .add-btn{
            background-color: saddlebrown;
            font-size:xx-small;
            border: 1px solid #4CAF50;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            margin-top:15px;
        }

        body{
            background-image: linear-gradient(to top, #d5d4d0 0%, #d5d4d0 1%, #eeeeec 31%, #efeeec 75%, #e9e9e7 100%);
        }

        .cart-container {
            background-color: #fff; /* White background */
            border-radius: 15px;
            padding: 15px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Box shadow */
            transition: box-shadow 0.3s ease; /* Smooth transition on hover */
        }

            .cart-container:hover {
                box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2); /* Darker box shadow on hover */
            }

        .cart-heading {
            font-size: 1.5rem;
            color: #333; /* Dark text color */
            margin-bottom: 15px;
        }

        .cart-item {
            margin-bottom: 10px;
        }

        .cart-total {
            font-size: 1.2rem;
            font-weight: bold;
            color: #333; /* Dark text color */
            margin-top: 15px;
        }

        .cancel-btn, .pay-btn {
            margin-top: 15px;
            margin-right: 10px;
            font-size: 1rem;
        }

        .pay-btn {
            background-color: #28a745; /* Green color for "Pay" button */
            color: #fff; /* White text color */
        }

            .pay-btn:hover {
                background-color: #218838; /* Darker green on hover */
            }
        

    </style>
</head>

<body>
    <div class="container home">
        <div class="row">
            <div class="col-9">
                @*  @if (LoginService.CurrentUserRole == null)
                {
                <!-- Show login button if the user is not logged in -->
                <button class="btn btn-primary" @onclick="NavigateToLoginPage">Login</button>
                } *@
                @* else
                {
                <!-- Show user's role if logged in -->
                <p>Welcome, @LoginService.CurrentUserRole!</p>
                } *@
                @* @if (LoginService.IsAdmin(LoginService.CurrentUserRole) || LoginService.IsStaff(LoginService.CurrentUserRole))
                { *@
                <div class="coffee-container gap-3 mt-2">
                <h4 class="">Available Coffee</h4>
                    @foreach (var coffeeType in CoffeeService.GetCoffeeTypes())
                    {
                        <div class="card">
                            <img src="@coffeeType.ImageLocation" alt="Product Image">
                            <div class="name">@coffeeType.CoffeeName</div>
                            <div class="price">Rs @coffeeType.CoffeePrice</div>
                            <button class="btn btn-success add-btn" @onclick="() => AddCoffeeToCart(coffeeType)">Add</button>
                        </div>

                    }
                </div>
                @* } *@
                    <h4 class="gap-3 mt-2">Available AddIns</h4>
                <div class="coffee-container d-flex flex-wrap gap-4 mt-4">
                    <div class="coffee-container d-flex flex-wrap gap-3 mt-2">
                        @foreach (var addIn in AddInsService.RetrieveAddInsData())
                        {
                            <div class="card">
                                <img src="@addIn.AddInImageUrl" alt="AddIn Image">
                                <div class="name">@addIn.AddInName</div>
                                <div class="name">@addIn.AddInPrice</div>
                                @* <button class="btn btn-success">Add to Cart</button> *@
                                <button class="btn btn-success add-btn" @onclick="() => AddAddInToCart(addIn)">Add</button>
                                <button class="btn btn-success add-btn" @onclick="() => EditAddIn(addIn.AddInID)">Edit</button>
                            </div>

                        }
                    </div>                                      
                </div>
            </div>
            @* End of FirstColumn *@            

            <div class="col-3">
                @if (LoginService.CurrentUserRole  != null)
                {                                                              
                <p>Welcome, @LoginService.CurrentUserRole!</p>
                }
                <h4 class="gap-3 mt-2">Cart Section</h4>
                <div class="cart-container">
                    <h3 class="cart-heading">Your Cart</h3>
                    @if (CartService.SelectedCoffee != null)
                    {
                        <div class="cart-item">
                            <p>@CartService.SelectedCoffee.CoffeeName - RS: @CartService.SelectedCoffee.CoffeePrice</p>
                        </div>
                    }

                    @foreach (var item in CartService.SelectedAddIn)
                    {
                        <div class="cart-item">
                            <p>@item.AddInName - RS: @item.AddInPrice</p>
                        </div>
                    }

                    <p class="cart-total">Total: RS @CartService.CalculateTotalPrice()</p>

                    <button class="btn btn-danger cancel-btn" @onclick="CancelOrder">Cancel</button>
                    <button id="payButton" class="btn pay-btn" @onclick="SubmitOrder">Pay</button>
                </div>
            </div>


        </div>
    </div>


    

    <!-- Popup modal section -->
    <div class="modal" tabindex="-1" role="dialog" id="customerModal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Enter Customer Information</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- Customer information form -->
                    <div class="mb-3">
                        <label for="customerName" class="form-label">Customer Name</label>
                        <input type="text" class="form-control" id="customerName" @bind="CartService.CurrentCustomer.CustomerName" placeholder="Enter your name">
                    </div>
                    <div class="mb-3">
                        <label for="phoneNumber" class="form-label">Phone Number</label>
                        <input type="text" class="form-control" id="phoneNumber" @bind="CartService.CurrentCustomer.PhoneNumber" placeholder="Enter your phone number">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal" @onclick="SubmitOrder">Submit</button>
                </div>
            </div>
        </div>
    </div>
    <script>
        // JavaScript to handle the click event and show the modal
        document.getElementById('payButton').addEventListener('click', function () {
            var customerModal = new bootstrap.Modal(document.getElementById('customerModal'));
            customerModal.show();
        });
    </script>

</body>

@code {

    private string adminPassword = "";

    private void AddCoffeeToCart(CoffeeTypes coffee)
    {
        CartService.AddCoffeeToCart(coffee);
    }

    private void AddAddInToCart(AddIns addIns)
    {
        CartService.AddAddInToCart(addIns);
    }

    private void CancelOrder()
    {
        // Reset the selected items in the cart
        CartService.SelectedCoffee = null;
        CartService.SelectedAddIn.Clear();
    }

    private bool showAlert = false;

    private void SubmitOrder()
    {
        // Calling the SubmitOrder method in your CartService
        CartService.SubmitOrder();

        // Set the flag to indicate that the order submission is complete

    }

    private void NavigateToLoginPage()
    {
        // Navigate to the login page
        NavigationManager.NavigateTo("/login");
    }
    private void CloseAlert()
    {
        // Close the alert when the close button is clicked
    }

    public void EditAddIn(Guid addInId)
    {
        // Navigate to the edit page for the selected Add-In
        NavigationManager.NavigateTo($"/editaddins/{addInId}");
    }


}
