@page "/"

@inject BisleriumCafe.Data.Services.CofeeTypesService CoffeeService
@inject BisleriumCafe.Data.Services.AddInsService AddInsService
@inject BisleriumCafe.Data.Services.CartService CartService
@inject Microsoft.JSInterop.IJSRuntime JSRuntime
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager


<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>

    <style>
        .card {
            border-radius: 20px;
            border: 0px solid;
            display: inline-block;
            margin: 10px;
            padding: 25px;
            text-align: center;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            transition: box-shadow 0.3s ease;
        }

            .card:hover {
                box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
            }

            .card img {
                border-radius: 20%;
                width: 80px;
                height: 80px;
                object-fit: cover;
            }

        .name {
            margin-top: 5px;
            font-weight: bold;
            color: grey;
            font-size: x-small;
        }

        .price {
            margin-top: 5px;
            color: green;
            color: grey;
            font-size: xx-small;
        }

        .add-btn {
            background-color: saddlebrown;
            font-size: xx-small;
            /* border: 1px solid #4CAF50; */
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            margin-top: 15px;
        }

        body {
            /* background-image: linear-gradient(to top, #d5d4d0 0%, #d5d4d0 1%, #eeeeec 31%, #efeeec 75%, #e9e9e7 100%); */
            /* background-image: linear-gradient(to top, #3b41c5 0%, #a981bb 49%, #ffc8a9 100%); */
            background-image: linear-gradient(to top, #dfe9f3 0%, white 100%);
        }

        .cart-container {
            background-color: #fff;
            border-radius: 15px;
            padding: 15px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            transition: box-shadow 0.3s ease;
        }

            .cart-container:hover {
                box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
            }

        .cart-heading {
            font-size: 1.5rem;
            color: #333;
            margin-bottom: 15px;
        }

        .cart-item {
            margin-bottom: 10px;
        }

        .cart-total {
            font-size: 1.2rem;
            font-weight: bold;
            color: #333;
            margin-top: 15px;
        }

        .cancel-btn, .pay-btn {
            margin-top: 15px;
            margin-right: 10px;
            font-size: 1rem;
        }

        .pay-btn {
            background-color: #28a745;
            color: #fff;
        }

            .pay-btn:hover {
                background-color: #218838;
            }

        .topic {
            color: darkgray;
            /* text-align:center; */
        }
    </style>
</head>
<p class="text-center m-0 p-0">Welcome @LoginService.CurrentUserRole!</p>
<div class="d-flex justify-content-end">
    @if (LoginService.CurrentUserRole == null)
    {
        <button class="btn btn-primary text-end" @onclick="NavigateToLoginPage">Login</button>
    }
    else
    {
        <button class="btn btn-outline-danger text-end m-0" @onclick="Logout">Logout</button>
    }
</div>
<body>
    @if (LoginService.IsAdmin(LoginService.CurrentUserRole) || LoginService.IsStaff(LoginService.CurrentUserRole))
    {
        <div class="container-fluid home">
            <div class="row">
                <div class="col-9 justify-content-center">


                    <div class="coffee-container gap-3 mt-2">
                        <h4 class="topic">Available Coffee</h4>
                        @foreach (var coffeeType in CoffeeService.GetCoffeeTypes())
                        {
                            <div class="card">
                                <img src="@coffeeType.ImageLocation" alt="Product Image">
                                <div class="name">@coffeeType.CoffeeName</div>
                                <div class="price">Rs @coffeeType.CoffeePrice</div>
                                <button class="btn btn-success add-btn" @onclick="() => AddCoffeeToCart(coffeeType)">Add</button>
                            </div>
                        }
                    </div>
                    <h4 class="gap-3 topic mt-3">Available AddIns</h4>
                    <div class="coffee-container d-flex flex-wrap gap-3 mt-2">
                        <div class="coffee-container gap-3 mt-2">
                            @foreach (var addIn in AddInsService.RetrieveAddInsData())
                            {
                                <div class="card">
                                    <img src="@addIn.AddInImageUrl" alt="AddIn Image">
                                    <div class="name">@addIn.AddInName</div>
                                    <div class="name">@addIn.AddInPrice</div>
                                    <span class="d-flex gap-1">
                                        <button class="btn btn-success add-btn" @onclick="() => AddAddInToCart(addIn)">Add</button>
                                        @if (LoginService.IsAdmin(LoginService.CurrentUserRole))
                                        {
                                            <button class="btn btn-success add-btn" @onclick="() => EditAddIn(addIn.AddInID)">Edit</button>
                                        }
                                    </span>
                                </div>


                            }
                        </div>
                    </div>
                </div>
                @* End of FirstColumn *@

                <div class="col-3">

                    <h4 class="gap-3 topic mt-2">Cart Section</h4>
                    <div class="cart-container mt-2">
                        <p class="text-black fw-bold">Coffee</p>
                        @if (CartService.SelectedCoffee != null)
                        {
                            <div class="cart-item">
                                <p class="topic">@CartService.SelectedCoffee.CoffeeName - RS: @CartService.SelectedCoffee.CoffeePrice</p>
                            </div>
                        }
                        
                        <p class="text-black fw-bold">AddIns</p>
                        @foreach (var item in CartService.SelectedAddIn)
                        {
                            <div class="cart-item">
                                <p class="topic ">@item.AddInName - RS: @item.AddInPrice</p>
                            </div>
                        }

                        <p class="cart-total topic fs-6">Total: RS @CartService.CalculateTotalPrice()</p>

                        <button id="payButton" class="btn btn-primary pay">Pay</button>
                        <button class="btn btn-danger" @onclick="CancelOrder">Cancel</button>
                    </div>
                </div>
            </div>
        </div>


        <div class="modal" tabindex="-1" role="dialog" id="customerModal">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Enter Customer Information</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">

                        <EditForm Model="@CartService.CurrentCustomer" OnValidSubmit="SubmitOrder">
                            <DataAnnotationsValidator />
                            <div class="mb-3">
                                <label for="customerName" class="form-label">Customer Name</label>
                                <InputText class="form-control" id="customerName" @bind-Value="CartService.CurrentCustomer.CustomerName" placeholder="Enter your name" />
                                <ValidationMessage For="@(() => CartService.CurrentCustomer.CustomerName)" />
                            </div>
                            <div class="mb-3">
                                <label for="phoneNumber" class="form-label">Phone Number</label>
                                <InputText class="form-control" id="phoneNumber" @bind-Value="CartService.CurrentCustomer.PhoneNumber" placeholder="Enter your phone number" />
                                <ValidationMessage For="@(() => CartService.CurrentCustomer.PhoneNumber)" />
                            </div>

                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                <button type="submit" class="btn btn-primary">Submit</button>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    }

    <script>
        document.getElementById('payButton').addEventListener('click', function () {
            var customerModal = new bootstrap.Modal(document.getElementById('customerModal'));
            customerModal.show();
            customerModal.clear();
        });
    </script>
</body>

@code {

    private string adminPassword = "";

    private void AddCoffeeToCart(CoffeeTypes coffee)
    {
        CartService.AddCoffeeToCart(coffee);
    }

    private void AddAddInToCart(AddIns addIns)
    {
        CartService.AddAddInToCart(addIns);
    }

    private void CancelOrder()
    {
        CartService.SelectedCoffee = null;
        CartService.SelectedAddIn.Clear();
    }

    private bool showAlert = false;

    public void SubmitOrder()
    {
        CartService.SubmitOrder();
        CartService.CurrentCustomer.CustomerName = string.Empty;
        CartService.CurrentCustomer.PhoneNumber = string.Empty;

    }

    private void NavigateToLoginPage()
    {
        NavigationManager.NavigateTo("/login");
    }

    public void EditAddIn(Guid addInId)
    {
        NavigationManager.NavigateTo($"/editaddins/{addInId}");
    }

    public void Logout()
    {
        LoginService.Logout();
        NavigationManager.NavigateTo("/");
        NavigationManager.Refresh();

    }


}
